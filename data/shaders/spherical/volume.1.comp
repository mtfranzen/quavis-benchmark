// WIDTH, HEIGHT, R_MAX are defined automatically

// constants
#define N_LOCAL 16
#define PI 3.1415926

layout (local_size_x = N_LOCAL, local_size_y = 1, local_size_z = 1) in;

layout (binding = 0, rg32f) uniform readonly image2D inputImage;
layout (binding = 1) buffer outputBuffer {
  float isovist;
};
layout (binding = 2) buffer tempBuffer {
  float tmp_global[];
};

shared float tmp_local[N_LOCAL];

void main()
{
  uint chunksize = WIDTH/N_LOCAL;
  float weight = sin(float(gl_WorkGroupID.x)*PI/float(HEIGHT))/float(HEIGHT)/float(WIDTH)*2*PI*PI/3.0;

  // compute sum per item
  uint xpos = gl_LocalInvocationID.x * chunksize;
  float tmp = 0.0;
  for (uint x = xpos; x < xpos + chunksize; x++) {
    float tmp2 = R_MAX*imageLoad(inputImage, ivec2(x, gl_WorkGroupID.x)).x;
    tmp += weight*tmp2*tmp2*tmp2;
  }
  tmp_local[gl_LocalInvocationID.x] = tmp;
  barrier();

  // group sum
  for (uint stride = N_LOCAL >> 1; stride > 0; stride >>= 1) {
    if (gl_LocalInvocationID.x < stride) {
      tmp_local[gl_LocalInvocationID.x] += tmp_local[gl_LocalInvocationID.x + stride];
    }
    barrier();
  }

  if (gl_LocalInvocationID.x == 0) {
    tmp_global[gl_WorkGroupID.x] = tmp_local[0];
  }
}
